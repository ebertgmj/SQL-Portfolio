#In this project I'll be querying a digital media store which includes tables for artists, albums, media tracks, invoices, and customers.
#The employees table contains information about employees such as their ID, last name, first name, and who they report to, while the customers table stores information about customers and the relationship between the two tables can be established using the employees.EmployeeID and customers.SupportRepID fields.
#Additionally, the store has tables for invoices, artists, albums, media types, genres, tracks, and playlists, each with their own unique set of data.

#1. Show Customers (their full names, customer ID, and country) who are not in the US. (Hint: != or <> can be used to say "is not equal to").

SELECT FirstName, LastName, CustomerId, Country
FROM chinook.customers
WHERE Country <> 'US'

#2. Show only the Customers from Brazil.
SELECT *
FROM chinook.customers
WHERE Country LIKE 'Brazil'

#3. Find the Invoices of customers who are from Brazil. The resulting table should show the customer's full name, Invoice ID, Date of the invoice, and billing country.

SELECT c.FirstName, c.LastName, i.InvoiceId, i.InvoiceDate, i.BillingCountry
FROM chinook.customers c
JOIN chinook.invoices i
ON c.CustomerId = i.CustomerId
WHERE i.BillingCountry = 'Brazil'

#4. Show the Employees who are Sales Agents.

SELECT * FROM chinook.employees
WHERE Title = 'Sales Support Agent'

#5. Find a unique/distinct list of billing countries from the Invoice table.

SELECT distinct BillingCountry
FROM invoices

#6. Provide a query that shows the invoices associated with each sales agent. The resulting table should include the Sales Agent's full name.

SELECT e.FirstName, e.LastName, i.InvoiceId
FROM employees e
JOIN customers c
ON c.SupportRepId = e.EmployeeId
JOIN invoices i
ON i.CustomerId = c.CustomerId

#7. Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.

SELECT inv.Total, c.FirstName, c.LastName, e.FirstName as AgentFirst, e.LastName as AgentLast, c.Country
FROM employees e
JOIN customers c
ON e.EmployeeId = c.SupportRepId
JOIN invoices inv
ON inv.CustomerId = c.CustomerId

#8. How many Invoices were there in 2009?

SELECT COUNT(*)
FROM invoices
WHERE InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31'

#9. What are the total sales for 2009?

SELECT SUM(Total)
FROM invoices
WHERE InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31'

#10. Write a query that includes the purchfed track name with each invoice line ID.

SELECT t.Name, i.InvoiceId
FROM tracks t
JOIN invoice_items i
ON t.TrackId = i.TrackId


#11. Write a query that includes the purchased track name AND artist name with each invoice line ID.

SELECT t.Name AS Track, ar.Name AS ArtistName, i.InvoiceId
FROM tracks t
JOIN invoice_items i
ON t.TrackId = i.TrackId
JOIN albums a
ON t.AlbumId = a.AlbumId
JOIN artists ar
ON a.ArtistId = ar.ArtistId

#12. Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.

SELECT t.Name AS Track, a.Title AS Album, g.Name AS Genre, m.Name AS MediaType
FROM tracks t
JOIN genres g
ON g.GenreId = t.GenreId
JOIN media_types m
ON m.MediaTypeId = t.MediaTypeId
JOIN albums a
ON t.AlbumId = a.AlbumId

#13. Show the total sales made by each sales agent.

SELECT e.FirstName, e.LastName, round(sum(i.Total),2) AS 'Total Sales'
FROM invoices i
JOIN customers c
ON i.CustomerId = c.CustomerId
JOIN employees e
ON c.SupportRepId = e.EmployeeId
WHERE e.Title = 'Sales Support Agent'
GROUP BY e.FirstName

#14. Which sales agent made the most dollars in sales in 2009?

SELECT e.FirstName, e.LastName, round(sum(i.Total),2) as 'Total Sales'
FROM invoices i
JOIN customers c
ON i.CustomerId = c.CustomerId
JOIN employees e
ON c.SupportRepId = e.EmployeeId
WHERE e.Title = 'Sales Support Agent'
AND i.InvoiceDate LIKE '2009%'
GROUP BY e.FirstName
ORDER BY 'Total Sales' desc
LIMIT 1

#15. What are the top 5 countries in terms of total sales?

SELECT BillingCountry AS Country, round(SUM(Total),2) AS TotalSales
FROM invoices
GROUP BY Country
ORDER BY TotalSales desc
LIMIT 5

#16. Which genre has the most tracks?

SELECT COUNT(*), g.Name
FROM tracks t
JOIN genres g
ON g.GenreId = t.GenreId
GROUP BY g.Name
ORDER BY COUNT(*) DESC
LIMIT 1


