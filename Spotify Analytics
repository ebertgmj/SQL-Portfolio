#A table was created to store the Spotify data downloaded from Kaggle

CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL )

#The table was designed with specific columns and data types to ensure data integrity.
#Data from the Spotify CSV file was inserted into the newly created table using SQL.
#SQL queries were used to explore the data and gain insights from it.

#What is the average speechiness of songs with a popularity greater than 80?

SELECT AVG(speechiness) AS avg_speechiness 
FROM BIT_DB.Spotifydata 
WHERE popularity > 80;

#What is the average duration of songs in the table?

SELECT AVG(duration_ms) AS avg_duration 
FROM BIT_DB.Spotifydata;

#What is the distribution of song keys in the table?

SELECT song_key, COUNT(*) AS count 
FROM BIT_DB.Spotifydata 
GROUP BY song_key;

#What's the average danceability for the 10 most popular songs?

SELECT AVG(danceability) AS avg_danceability 
FROM BIT_DB.Spotifydata 
ORDER BY popularity DESC 
LIMIT 10;
